server.servlet.context-path=/community
spring.thymeleaf.cache=false

# 数据库配置
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mysql://localhost:3306/community?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000


# 整合mybatis
mybatis.type-aliases-package=com.nowcoder.community.entity
mybatis.mapper-locations=classpath:mapper/*.xml
# 自动生成id
mybatis.configuration.use-generated-keys=true
mybatis.configuration.map-underscore-to-camel-case=true

# logger 调整日志级别
# logging.level.com.nowcoder.community=debug
# logging.file.name=E:/Environment/data/nowcoder/community.log

# MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=587
spring.mail.username=jiuyu_m@sina.com
spring.mail.password=60df98bf6c92a49b
# spring.mail.protocol=smtps
# spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtl.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# community
community.path.domain=http://localhost:8080

# 配置文件上传路径
community.path.upload=E:/Environment/data/upload

# RedisProperties
spring.redis.database=9
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
# spring.data.elasticsearch.cluster-name=my-application
# spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
# spring.elasticsearch.uris=127.0.0.1:9200
elasticSearch.url=127.0.0.1:9200

# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties配置Quartz
# 下面配置的意思是
# 底层是jdbc
# communityScheduler是调度器名字
# 调度器id自动生成
# 用org.quartz.impl.jdbcjobstore.JobStoreTX将任务存到数据库
# 使用 org.quartz.impl.jdbcjobstore.StdJDBCDelegate 这个jdbc驱动，
# 采用集群方式
# 用org.quartz.simpl.SimpleThreadPool这个线程池
# 线程数量5

spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# wk
wk.image.command=E:/Environment/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=E:/Environment/data/wk-image

# qiniu
qiniu.key.access=jbwBZNe7JWw8Bm_i4JKgwIvxAf54e9QnF7K9jvft
qiniu.key.secret=7X0PJW4tjxc5PveEL10t2ZjdH6TOHbEfdLbZG3pJ
qiniu.bucket.header.name=jiuyu-header
quniu.bucket.header.url=http://rs68t0cls.hb-bkt.clouddn.com
qiniu.bucket.share.name=jiuyu-share
qiniu.bucket.share.url=http://rs6816w94.hb-bkt.clouddn.com